From 1a6eb6058b4c742876117984115281d44c27fb14 Mon Sep 17 00:00:00 2001
From: AMS21 <AMS21.github@gmail.com>
Date: Sat, 11 May 2024 12:30:25 +0200
Subject: [PATCH 2/2] Fix return cast

---
 llvm/lib/Support/DynamicLibrary.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/llvm/lib/Support/DynamicLibrary.cpp b/llvm/lib/Support/DynamicLibrary.cpp
index ced21e46afe8..0cf7e6f7d4b4 100644
--- a/llvm/lib/Support/DynamicLibrary.cpp
+++ b/llvm/lib/Support/DynamicLibrary.cpp
@@ -138,7 +138,7 @@ void* DynamicLibrary::SearchForAddressOfSymbol(const char *symbolName) {
 
 // This macro returns the address of a well-known, explicit symbol
 #define EXPLICIT_SYMBOL(SYM) \
-   if (!strcmp(symbolName, #SYM)) return &SYM
+   if (!strcmp(symbolName, #SYM)) return (void*)&SYM
 
 // On linux we have a weird situation. The stderr/out/in symbols are both
 // macros and global variables because of standards requirements. So, we
-- 
2.44.0

